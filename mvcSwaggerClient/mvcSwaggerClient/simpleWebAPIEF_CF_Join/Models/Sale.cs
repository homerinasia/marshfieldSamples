// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Linq;
using Newtonsoft.Json.Linq;

namespace MvcSwaggerClient.Models
{
    public partial class Sale
    {
        private DateTimeOffset? _ordDate;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public DateTimeOffset? OrdDate
        {
            get { return this._ordDate; }
            set { this._ordDate = value; }
        }
        
        private string _ordNum;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string OrdNum
        {
            get { return this._ordNum; }
            set { this._ordNum = value; }
        }
        
        private string _payterms;
        
        /// <summary>
        /// Required.
        /// </summary>
        public string Payterms
        {
            get { return this._payterms; }
            set { this._payterms = value; }
        }
        
        private int? _qty;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public int? Qty
        {
            get { return this._qty; }
            set { this._qty = value; }
        }
        
        private string _storID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string StorID
        {
            get { return this._storID; }
            set { this._storID = value; }
        }
        
        private string _titleID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string TitleID
        {
            get { return this._titleID; }
            set { this._titleID = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Sale class.
        /// </summary>
        public Sale()
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the sale class with required
        /// arguments.
        /// </summary>
        public Sale(string payterms)
            : this()
        {
            if (payterms == null)
            {
                throw new ArgumentNullException("payterms");
            }
            this.Payterms = payterms;
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken ordDateValue = inputObject["ord_date"];
                if (ordDateValue != null && ordDateValue.Type != JTokenType.Null)
                {
                    this.OrdDate = ((DateTimeOffset)ordDateValue);
                }
                JToken ordNumValue = inputObject["ord_num"];
                if (ordNumValue != null && ordNumValue.Type != JTokenType.Null)
                {
                    this.OrdNum = ((string)ordNumValue);
                }
                JToken paytermsValue = inputObject["payterms"];
                if (paytermsValue != null && paytermsValue.Type != JTokenType.Null)
                {
                    this.Payterms = ((string)paytermsValue);
                }
                JToken qtyValue = inputObject["qty"];
                if (qtyValue != null && qtyValue.Type != JTokenType.Null)
                {
                    this.Qty = ((int)qtyValue);
                }
                JToken storIDValue = inputObject["stor_id"];
                if (storIDValue != null && storIDValue.Type != JTokenType.Null)
                {
                    this.StorID = ((string)storIDValue);
                }
                JToken titleIDValue = inputObject["title_id"];
                if (titleIDValue != null && titleIDValue.Type != JTokenType.Null)
                {
                    this.TitleID = ((string)titleIDValue);
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type sale
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.Payterms == null)
            {
                throw new ArgumentNullException("Payterms");
            }
            if (this.OrdDate != null)
            {
                outputObject["ord_date"] = this.OrdDate.Value;
            }
            if (this.OrdNum != null)
            {
                outputObject["ord_num"] = this.OrdNum;
            }
            if (this.Payterms != null)
            {
                outputObject["payterms"] = this.Payterms;
            }
            if (this.Qty != null)
            {
                outputObject["qty"] = this.Qty.Value;
            }
            if (this.StorID != null)
            {
                outputObject["stor_id"] = this.StorID;
            }
            if (this.TitleID != null)
            {
                outputObject["title_id"] = this.TitleID;
            }
            return outputObject;
        }
    }
}
