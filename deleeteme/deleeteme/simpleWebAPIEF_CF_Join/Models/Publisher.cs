// Code generated by Microsoft (R) AutoRest Code Generator 0.9.7.0
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

using System;
using System.Collections.Generic;
using System.Linq;
using Deleeteme.Models;
using Microsoft.Rest;
using Newtonsoft.Json.Linq;

namespace Deleeteme.Models
{
    public partial class Publisher
    {
        private string _city;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string City
        {
            get { return this._city; }
            set { this._city = value; }
        }
        
        private string _country;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string Country
        {
            get { return this._country; }
            set { this._country = value; }
        }
        
        private string _pubID;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PubID
        {
            get { return this._pubID; }
            set { this._pubID = value; }
        }
        
        private string _pubName;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string PubName
        {
            get { return this._pubName; }
            set { this._pubName = value; }
        }
        
        private string _state;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public string State
        {
            get { return this._state; }
            set { this._state = value; }
        }
        
        private IList<Title> _titles;
        
        /// <summary>
        /// Optional.
        /// </summary>
        public IList<Title> Titles
        {
            get { return this._titles; }
            set { this._titles = value; }
        }
        
        /// <summary>
        /// Initializes a new instance of the Publisher class.
        /// </summary>
        public Publisher()
        {
            this.Titles = new LazyList<Title>();
        }
        
        /// <summary>
        /// Deserialize the object
        /// </summary>
        public virtual void DeserializeJson(JToken inputObject)
        {
            if (inputObject != null && inputObject.Type != JTokenType.Null)
            {
                JToken cityValue = inputObject["city"];
                if (cityValue != null && cityValue.Type != JTokenType.Null)
                {
                    this.City = ((string)cityValue);
                }
                JToken countryValue = inputObject["country"];
                if (countryValue != null && countryValue.Type != JTokenType.Null)
                {
                    this.Country = ((string)countryValue);
                }
                JToken pubIDValue = inputObject["pub_id"];
                if (pubIDValue != null && pubIDValue.Type != JTokenType.Null)
                {
                    this.PubID = ((string)pubIDValue);
                }
                JToken pubNameValue = inputObject["pub_name"];
                if (pubNameValue != null && pubNameValue.Type != JTokenType.Null)
                {
                    this.PubName = ((string)pubNameValue);
                }
                JToken stateValue = inputObject["state"];
                if (stateValue != null && stateValue.Type != JTokenType.Null)
                {
                    this.State = ((string)stateValue);
                }
                JToken titlesSequence = ((JToken)inputObject["titles"]);
                if (titlesSequence != null && titlesSequence.Type != JTokenType.Null)
                {
                    foreach (JToken titlesValue in ((JArray)titlesSequence))
                    {
                        Title title = new Title();
                        title.DeserializeJson(titlesValue);
                        this.Titles.Add(title);
                    }
                }
            }
        }
        
        /// <summary>
        /// Serialize the object
        /// </summary>
        /// <returns>
        /// Returns the json model for the type publisher
        /// </returns>
        public virtual JToken SerializeJson(JToken outputObject)
        {
            if (outputObject == null)
            {
                outputObject = new JObject();
            }
            if (this.City != null)
            {
                outputObject["city"] = this.City;
            }
            if (this.Country != null)
            {
                outputObject["country"] = this.Country;
            }
            if (this.PubID != null)
            {
                outputObject["pub_id"] = this.PubID;
            }
            if (this.PubName != null)
            {
                outputObject["pub_name"] = this.PubName;
            }
            if (this.State != null)
            {
                outputObject["state"] = this.State;
            }
            JArray titlesSequence = null;
            if (this.Titles != null)
            {
                if (this.Titles is ILazyCollection<Title> == false || ((ILazyCollection<Title>)this.Titles).IsInitialized)
                {
                    titlesSequence = new JArray();
                    outputObject["titles"] = titlesSequence;
                    foreach (Title titlesItem in this.Titles)
                    {
                        if (titlesItem != null)
                        {
                            titlesSequence.Add(titlesItem.SerializeJson(null));
                        }
                    }
                }
            }
            return outputObject;
        }
    }
}
